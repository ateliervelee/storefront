rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Products - Read-only for all users, admin can write
    match /products/{productId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.email == "ateliervelee@gmail.com";
      
      // Product variants subcollection
      match /variants/{variantId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.token.email == "ateliervelee@gmail.com";
      }
    }
    
    // Administrators - Only super admins can read/write
    match /administrators/{adminId} {
      allow read, write: if request.auth != null && request.auth.token.email == "ateliervelee@gmail.com";
    }
    
    // Orders - Support both authenticated users and guest sessions
    match /orders/{orderId} {
      // Anyone can create an order
      allow create: if true;

      // Read permissions:
      // - Admin can read any order
      // - Authenticated users can read their own orders (customerId == uid)  
      // - Guests can read orders with matching session token + browser fingerprint
      allow read: if 
        // Admin access
        (request.auth != null && request.auth.token.email == "ateliervelee@gmail.com")
        // Authenticated user access
        || (request.auth != null && resource.data.customerId == request.auth.uid)
        // Guest access (must match both session token and browser fingerprint)
        || (request.auth == null && 
            request.query.guestSessionToken == resource.data.guestSessionToken &&
            request.query.browserFingerprint == resource.data.browserFingerprint);

      // Update permissions:
      // - Admin can update any order
      // - Guests can update orders with matching session token + browser fingerprint
      allow update: if 
        // Admin access (simplified - no complex validation)
        (request.auth != null && request.auth.token.email == "ateliervelee@gmail.com")
        // Guest access (must match both session token and browser fingerprint)
        || (request.auth == null && 
            request.query.guestSessionToken == resource.data.guestSessionToken &&
            request.query.browserFingerprint == resource.data.browserFingerprint);

      // Delete: Admin only
      allow delete: if request.auth != null && request.auth.token.email == "ateliervelee@gmail.com";
    }
    
    // Order Numbers - Auto-incrementing counter
    match /orderNumbers/counter {
      allow read, write: if true; // Needed for order number generation
    }
    
    // Inventory tracking (optional for future use)
    match /inventory/{itemId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.token.email == "ateliervelee@gmail.com";
    }
    
    // Customer data (optional for future use)
    match /customers/{customerId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid == customerId || 
         request.auth.token.email == "ateliervelee@gmail.com");
    }
    
    // Analytics (admin only)
    match /analytics/{docId} {
      allow read, write: if request.auth != null && request.auth.token.email == "ateliervelee@gmail.com";
    }
    
    // Settings (admin only)
    match /settings/{docId} {
      allow read, write: if request.auth != null && request.auth.token.email == "ateliervelee@gmail.com";
    }
  }
} 